{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../node_modules/@finsweet/ts-utils/dist/webflow/breakpoints.js", "../node_modules/@finsweet/ts-utils/dist/webflow/getCurrentBreakpoint.js", "../src/index.js"],
  "sourcesContent": ["new EventSource(`http://localhost:${SERVE_PORT}/esbuild`).addEventListener('change', () =>\r\n  location.reload()\r\n);\r\n", "/**\n * Defines the default media queries for Webflow's breakpoints.\n */\nexport const WEBFLOW_BREAKPOINTS = new Map([\n    ['tiny', '(max-width: 479px)'],\n    ['small', '(max-width: 767px)'],\n    ['medium', '(max-width: 991px)'],\n    ['main', '(min-width: 992px)'],\n]);\n", "import { WEBFLOW_BREAKPOINTS } from './breakpoints';\n/**\n * Checks the current breakpoint based on the window media.\n *\n * @returns A {@link WebflowBreakpoint} string.\n */\nexport const getCurrentBreakpoint = () => {\n    for (const [breakpoint, mediaQuery] of WEBFLOW_BREAKPOINTS) {\n        if (window.matchMedia(mediaQuery).matches) {\n            return breakpoint;\n        }\n    }\n    return 'main';\n};\n", "import { getCurrentBreakpoint } from \"@finsweet/ts-utils\"\r\n\r\nconst menu = document.querySelector(\"[brs-menuheight='menu']\")\r\nconst menuContainer = menu?.querySelector(\"[brs-menuheight='menu-container']\")\r\nconst navBar = menu?.querySelector(\"[brs-menuheight='navbar']\")\r\n\r\nlet breakpoints = menu?.getAttribute(\"brs-menuheight-breakpoints\")?.replace(/\\s/g, \"\").split(\",\")\r\nif (!breakpoints?.length) breakpoints = [\"tiny\"]\r\n\r\nwindow.Webflow ||= []\r\nwindow.Webflow.push(() => {\r\n   if (!breakpoints.includes(getCurrentBreakpoint())) return\r\n   if (!menu || !menuContainer || !navBar) return\r\n   let lastPosition = 0\r\n   window.addEventListener(\"scroll\", () => {\r\n      const { bottom: newPosition } = navBar.getBoundingClientRect()\r\n      if (lastPosition === newPosition) return\r\n      lastPosition = newPosition\r\n      requestAnimationFrame(resizeMenu)\r\n   })\r\n   resizeMenu()\r\n})\r\n\r\nfunction resizeMenu() {\r\n   const newHeight = getDistanceFromElementBottomToScreenBottom(navBar)\r\n   menuContainer.style.height = newHeight / 16 + \"rem\"\r\n   console.log(\"resize\")\r\n}\r\n\r\nfunction getDistanceFromElementBottomToScreenBottom(element) {\r\n   if (!element) {\r\n      console.error(\"Element not found!\")\r\n      return null\r\n   }\r\n   const rect = element.getBoundingClientRect()\r\n   const windowHeight = window.innerHeight || document.documentElement.clientHeight\r\n   const distance = windowHeight - rect.bottom\r\n\r\n   return distance\r\n}\r\n"],
  "mappings": ";;AAAA,MAAI,YAAY,oBAAoB,aAAoB,EAAE;AAAA,IAAiB;AAAA,IAAU,MACnF,SAAS,OAAO;AAAA,EAClB;;;ACCO,MAAM,sBAAsB,oBAAI,IAAI;AAAA,IACvC,CAAC,QAAQ,oBAAoB;AAAA,IAC7B,CAAC,SAAS,oBAAoB;AAAA,IAC9B,CAAC,UAAU,oBAAoB;AAAA,IAC/B,CAAC,QAAQ,oBAAoB;AAAA,EACjC,CAAC;;;ACFM,MAAM,uBAAuB,MAAM;AACtC,eAAW,CAAC,YAAY,UAAU,KAAK,qBAAqB;AACxD,UAAI,OAAO,WAAW,UAAU,EAAE,SAAS;AACvC,eAAO;AAAA,MACX;AAAA,IACJ;AACA,WAAO;AAAA,EACX;;;ACXA,MAAM,OAAO,SAAS,cAAc,yBAAyB;AAC7D,MAAM,gBAAgB,MAAM,cAAc,mCAAmC;AAC7E,MAAM,SAAS,MAAM,cAAc,2BAA2B;AAE9D,MAAI,cAAc,MAAM,aAAa,4BAA4B,GAAG,QAAQ,OAAO,EAAE,EAAE,MAAM,GAAG;AAChG,MAAI,CAAC,aAAa;AAAQ,kBAAc,CAAC,MAAM;AAE/C,SAAO,YAAY,CAAC;AACpB,SAAO,QAAQ,KAAK,MAAM;AACvB,QAAI,CAAC,YAAY,SAAS,qBAAqB,CAAC;AAAG;AACnD,QAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC;AAAQ;AACxC,QAAI,eAAe;AACnB,WAAO,iBAAiB,UAAU,MAAM;AACrC,YAAM,EAAE,QAAQ,YAAY,IAAI,OAAO,sBAAsB;AAC7D,UAAI,iBAAiB;AAAa;AAClC,qBAAe;AACf,4BAAsB,UAAU;AAAA,IACnC,CAAC;AACD,eAAW;AAAA,EACd,CAAC;AAED,WAAS,aAAa;AACnB,UAAM,YAAY,2CAA2C,MAAM;AACnE,kBAAc,MAAM,SAAS,YAAY,KAAK;AAC9C,YAAQ,IAAI,QAAQ;AAAA,EACvB;AAEA,WAAS,2CAA2C,SAAS;AAC1D,QAAI,CAAC,SAAS;AACX,cAAQ,MAAM,oBAAoB;AAClC,aAAO;AAAA,IACV;AACA,UAAM,OAAO,QAAQ,sBAAsB;AAC3C,UAAM,eAAe,OAAO,eAAe,SAAS,gBAAgB;AACpE,UAAM,WAAW,eAAe,KAAK;AAErC,WAAO;AAAA,EACV;",
  "names": []
}
